package jopenvr;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class ImuSample_t extends Structure {
	public double fSampleTime;
	public HmdVector3d_t vAccel;
	public HmdVector3d_t vGyro;
	public int unOffScaleFlags;
	public ImuSample_t() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("fSampleTime", "vAccel", "vGyro", "unOffScaleFlags");
	}
	public ImuSample_t(double fSampleTime, HmdVector3d_t vAccel, HmdVector3d_t vGyro, int unOffScaleFlags) {
		super();
		this.fSampleTime = fSampleTime;
		this.vAccel = vAccel;
		this.vGyro = vGyro;
		this.unOffScaleFlags = unOffScaleFlags;
	}
	public ImuSample_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends ImuSample_t implements Structure.ByReference {
		
	};
	public static class ByValue extends ImuSample_t implements Structure.ByValue {
		
	};
}
